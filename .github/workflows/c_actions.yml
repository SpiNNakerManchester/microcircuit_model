# Copyright (c) 2024 The University of Manchester
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

name: C Actions
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Prepare
      uses: SpiNNakerManchester/SupportScripts/actions/prepare@main
      with:
        checkout_dependencies: spinnaker_tools spinn_common SpiNNFrontEndCommon sPyNNaker
        install_dependencies: SpiNNUtils
        install_module: false
        install_check_tools: false
        ubuntu_packages: doxygen gcc-arm-none-eabi

    - name: Set environment variables
      run: |
        echo "SPINN_DIRS=$PWD/spinnaker_tools" >> $GITHUB_ENV
        echo "NEURAL_MODELLING_DIRS=$PWD/sPyNNaker/neural_modelling" >> $GITHUB_ENV
        echo "C_LOGS_DICT=$PWD/logs.sqlite3" >> $GITHUB_ENV

    - name: Build C dependencies
      run: |
        make -C $SPINN_DIRS
        make -C spinn_common install

    - name: Build FEC C code
      run: make
      working-directory: SpiNNFrontEndCommon/c_common
      env:
        CFLAGS: -fdiagnostics-color=always

    - name: Build PYNN C code
      run: make
      working-directory: sPyNNaker/neural_modelling
      env:
        CFLAGS: -fdiagnostics-color=always

    - name: Upload Fec binaries
      uses: actions/upload-artifact@v4
      with:
        name: fec_binaries
        path: SpiNNFrontEndCommon/spinn_front_end_common/common_model_binaries/*.aplx
        retention-days: 5

    - name: Upload PyNN binaries
      uses: actions/upload-artifact@v4
      with:
        name: pynn_binaries
        path: sPyNNaker/spynnaker/pyNN/model_binaries/*.aplx
        retention-days: 5

    - name: Upload log.sqlite3s
      uses: actions/upload-artifact@v4
      with:
        name: logs.sqlite3
        path: logs.sqlite3
        retention-days: 5

  test:
    needs: build
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 20
    strategy:
      matrix:
        runner: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Prepare
      uses: SpiNNakerManchester/SupportScripts/actions/prepare@main
      with:
        install_dependencies: > 
          SpiNNUtils SpiNNMachine SpiNNMan PACMAN spalloc
          SpiNNFrontEndCommon TestBase sPyNNaker
        install_module: false
        install_check_tools: false
        ubuntu_packages: graphviz
        cfg_file: spynnaker

    - name: Download Fec binaries
      uses: actions/download-artifact@v4
      with:
        name: fec_binaries
        # Need to go into spynnaker as FEC will have been moved by install
        path: external_binaries

    - name: Download PyNN Binaries
      uses: actions/download-artifact@v4
      with:
        name: pynn_binaries
        path: external_binaries

    - name: Download logs.sqlite3
      uses: actions/download-artifact@v4
      with:
        name: logs.sqlite3
        path: external_binaries

    - name: Append cfg
      # Doing this in the prepare action ended with a different path
      run: | 
        echo '[Mapping]' >> ~/.spynnaker.cfg
        echo "external_binaries=$PWD/external_binaries" >> ~/.spynnaker.cfg
        cat ~/.spynnaker.cfg

    - name: Test with pytest and proxy
      env:
        SPALLOC_USER: ${{ secrets.SPALLOC_USER }}
        SPALLOC_PASSWORD: ${{ secrets.SPALLOC_PASSWORD }}
      run: pytest integration_tests/test_microcircuit.py
